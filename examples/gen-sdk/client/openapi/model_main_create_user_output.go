/*
main

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MainCreateUserOutput struct for MainCreateUserOutput
type MainCreateUserOutput struct {
	Name string `json:"name"`
	NickName string `json:"nickName"`
	Phone string `json:"phone"`
}

// NewMainCreateUserOutput instantiates a new MainCreateUserOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainCreateUserOutput(name string, nickName string, phone string) *MainCreateUserOutput {
	this := MainCreateUserOutput{}
	this.Name = name
	this.NickName = nickName
	this.Phone = phone
	return &this
}

// NewMainCreateUserOutputWithDefaults instantiates a new MainCreateUserOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainCreateUserOutputWithDefaults() *MainCreateUserOutput {
	this := MainCreateUserOutput{}
	return &this
}

// GetName returns the Name field value
func (o *MainCreateUserOutput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MainCreateUserOutput) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MainCreateUserOutput) SetName(v string) {
	o.Name = v
}

// GetNickName returns the NickName field value
func (o *MainCreateUserOutput) GetNickName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value
// and a boolean to check if the value has been set.
func (o *MainCreateUserOutput) GetNickNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NickName, true
}

// SetNickName sets field value
func (o *MainCreateUserOutput) SetNickName(v string) {
	o.NickName = v
}

// GetPhone returns the Phone field value
func (o *MainCreateUserOutput) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *MainCreateUserOutput) GetPhoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *MainCreateUserOutput) SetPhone(v string) {
	o.Phone = v
}

func (o MainCreateUserOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["nickName"] = o.NickName
	}
	if true {
		toSerialize["phone"] = o.Phone
	}
	return json.Marshal(toSerialize)
}

type NullableMainCreateUserOutput struct {
	value *MainCreateUserOutput
	isSet bool
}

func (v NullableMainCreateUserOutput) Get() *MainCreateUserOutput {
	return v.value
}

func (v *NullableMainCreateUserOutput) Set(val *MainCreateUserOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableMainCreateUserOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableMainCreateUserOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainCreateUserOutput(val *MainCreateUserOutput) *NullableMainCreateUserOutput {
	return &NullableMainCreateUserOutput{value: val, isSet: true}
}

func (v NullableMainCreateUserOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainCreateUserOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


